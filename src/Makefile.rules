include ../../Config

ifeq ($(TARGET),)
TARGET = sys/$(notdir $(shell pwd))
endif
BINTARGET = ../../bin/initrd/$(TARGET)
SRCS = $(wildcard *.c)
OBJS = $(SRCS:.c=.o)
LIBS += -lc
ECHO ?= echo
CFLAGS += -DDEBUG=$(DEBUG) -DOPTIMIZE=$(OPTIMIZE) -D__$(ARCH)__ -nostdinc -I../../include -I../../include/osZ -I../libc \
 -I../libui -I../drivers/include
LDFLAGS += -nostdlib -x -L../../bin/initrd/sys/lib --build-id=none --export-dynamic
ifeq ($(LINKER),sharedlib)
CFLAGS += -fPIC
LDFLAGS += -e init -shared -Bsymbolic -Bshareable
else
CFLAGS += -fPIE
ifeq (,$(findstring shareable,$(LDFLAGS)))
LDFLAGS += -pie
else
CFLAGS += -fPIC
endif
# LLVM lld nem támogatja a STARTUP()-ot a szkriptekben, úgyhogy inkább megadjuk a parancssorban
LDFLAGS += -e _start ../../bin/initrd/sys/lib/crt0.o
endif

all: $(OBJS) $(BINTARGET)

%.o: %.c ../../Config
	@$(ECHO) "  src		$<"
	$(O)$(CC) $(OPT) $(CFLAGS) -c $< -o $@

$(BINTARGET): $(OBJS) $(EXTOBJ)
	@echo "  lnk		$(TARGET)"
	$(O)$(LD) $(LDFLAGS) $(EXTOBJ) $(OBJS) -T ../link.ld -o $(BINTARGET) $(LIBS)
	@../../tools/elftool.o -c $(BINTARGET)

clean:
	@rm *.o $(BINTARGET) 2>/dev/null || true
